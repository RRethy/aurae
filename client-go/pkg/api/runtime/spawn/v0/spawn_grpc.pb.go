// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: runtime/spawn/v0/spawn.proto

package spawnv0

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SpawnServiceClient is the client API for SpawnService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SpawnServiceClient interface {
}

type spawnServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSpawnServiceClient(cc grpc.ClientConnInterface) SpawnServiceClient {
	return &spawnServiceClient{cc}
}

// SpawnServiceServer is the server API for SpawnService service.
// All implementations must embed UnimplementedSpawnServiceServer
// for forward compatibility
type SpawnServiceServer interface {
	mustEmbedUnimplementedSpawnServiceServer()
}

// UnimplementedSpawnServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSpawnServiceServer struct {
}

func (UnimplementedSpawnServiceServer) mustEmbedUnimplementedSpawnServiceServer() {}

// UnsafeSpawnServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SpawnServiceServer will
// result in compilation errors.
type UnsafeSpawnServiceServer interface {
	mustEmbedUnimplementedSpawnServiceServer()
}

func RegisterSpawnServiceServer(s grpc.ServiceRegistrar, srv SpawnServiceServer) {
	s.RegisterService(&SpawnService_ServiceDesc, srv)
}

// SpawnService_ServiceDesc is the grpc.ServiceDesc for SpawnService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SpawnService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "aurae.runtime.spawn.v0.SpawnService",
	HandlerType: (*SpawnServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "runtime/spawn/v0/spawn.proto",
}
